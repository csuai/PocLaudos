// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PocLaudos;

#nullable disable

namespace PocLaudos.Migrations
{
    [DbContext(typeof(Db))]
    partial class DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PocLaudos.Model.CampoData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModeloLaudoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("ModeloLaudoId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoDecimal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModeloLaudoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("ModeloLaudoId");

                    b.ToTable("CampoDecimal");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoLista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModeloLaudoId")
                        .HasColumnType("uuid");

                    b.Property<bool>("MultiplosValores")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("ModeloLaudoId");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoTexto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModeloLaudoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ModeloLaudoId");

                    b.ToTable("Texto");
                });

            modelBuilder.Entity("PocLaudos.Model.ClassificadorCampo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("TipoClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TipoClassificadorCampoId");

                    b.ToTable("ClassificadorCampo");
                });

            modelBuilder.Entity("PocLaudos.Model.Especie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Fav")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("PocLaudos.Model.ItemLista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampoListaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CampoListaId");

                    b.ToTable("ItemLista");
                });

            modelBuilder.Entity("PocLaudos.Model.LaudoPericial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModeloLaudoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModeloLaudoId");

                    b.ToTable("LaudoPericial");
                });

            modelBuilder.Entity("PocLaudos.Model.ModeloLaudo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EspecieId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.ToTable("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.TipoClassificadorCampo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoClassificadorCampo");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LaudoPericialId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Valor")
                        .HasPrecision(0)
                        .HasColumnType("timestamp(0) with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("LaudoPericialId");

                    b.ToTable("ValorData");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorDecimal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LaudoPericialId")
                        .HasColumnType("uuid");

                    b.Property<double?>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("LaudoPericialId");

                    b.ToTable("ValorDecimal");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorLista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClassificadorCampoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemListaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LaudoPericialId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClassificadorCampoId");

                    b.HasIndex("ItemListaId");

                    b.HasIndex("LaudoPericialId");

                    b.ToTable("ValorLista");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoData", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.ModeloLaudo", "ModeloLaudo")
                        .WithMany("CampoData")
                        .HasForeignKey("ModeloLaudoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoDecimal", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.ModeloLaudo", "ModeloLaudo")
                        .WithMany("CampoDecimal")
                        .HasForeignKey("ModeloLaudoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoLista", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.ModeloLaudo", "ModeloLaudo")
                        .WithMany("CampoLista")
                        .HasForeignKey("ModeloLaudoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoTexto", b =>
                {
                    b.HasOne("PocLaudos.Model.ModeloLaudo", "ModeloLaudo")
                        .WithMany("CampoTextos")
                        .HasForeignKey("ModeloLaudoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.ClassificadorCampo", b =>
                {
                    b.HasOne("PocLaudos.Model.TipoClassificadorCampo", "TipoClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("TipoClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoClassificadorCampo");
                });

            modelBuilder.Entity("PocLaudos.Model.ItemLista", b =>
                {
                    b.HasOne("PocLaudos.Model.CampoLista", "CampoLista")
                        .WithMany("Itens")
                        .HasForeignKey("CampoListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampoLista");
                });

            modelBuilder.Entity("PocLaudos.Model.LaudoPericial", b =>
                {
                    b.HasOne("PocLaudos.Model.ModeloLaudo", "ModeloLaudo")
                        .WithMany()
                        .HasForeignKey("ModeloLaudoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ModeloLaudo");
                });

            modelBuilder.Entity("PocLaudos.Model.ModeloLaudo", b =>
                {
                    b.HasOne("PocLaudos.Model.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorData", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.LaudoPericial", "LaudoPericial")
                        .WithMany()
                        .HasForeignKey("LaudoPericialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("LaudoPericial");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorDecimal", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.LaudoPericial", "LaudoPericial")
                        .WithMany()
                        .HasForeignKey("LaudoPericialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("LaudoPericial");
                });

            modelBuilder.Entity("PocLaudos.Model.ValorLista", b =>
                {
                    b.HasOne("PocLaudos.Model.ClassificadorCampo", "ClassificadorCampo")
                        .WithMany()
                        .HasForeignKey("ClassificadorCampoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.ItemLista", "ItemLista")
                        .WithMany()
                        .HasForeignKey("ItemListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PocLaudos.Model.LaudoPericial", "LaudoPericial")
                        .WithMany()
                        .HasForeignKey("LaudoPericialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassificadorCampo");

                    b.Navigation("ItemLista");

                    b.Navigation("LaudoPericial");
                });

            modelBuilder.Entity("PocLaudos.Model.CampoLista", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PocLaudos.Model.ModeloLaudo", b =>
                {
                    b.Navigation("CampoData");

                    b.Navigation("CampoDecimal");

                    b.Navigation("CampoLista");

                    b.Navigation("CampoTextos");
                });
#pragma warning restore 612, 618
        }
    }
}
